# Cheat Sheet for NetSIG presentation - Building GCP with Terraform
# For more details:
# https://github.com/netserf/netsig-presentation-building-gcp-with-terraform

# Terraform installation instructions
# See https://learn.hashicorp.com/tutorials/terraform/install-cli

# If you'd like to follow along, log into GCP Console and open Cloud Shell
# Run the following commands:

git clone https://github.com/netserf/netsig-presentation-building-gcp-with-terraform.git
cd netsig-presentation-building-gcp-with-terraform
WORKDIR=$(pwd)

# Example 1 - Terraform Hello World example

# initialize & build "infrastructure"
cd $WORKDIR/terraform/hello
cat main.tf
terraform init
terraform plan
terraform apply

# check the state file and the "resource"
terraform state list
terraform state show local_file.hello
cat /tmp/hello.txt
ll /tmp/hello.txt

# update main.tf - permissions to 0644
terraform plan
terraform apply

# check the state file and the "resource" again
terraform state list
terraform state show local_file.hello
cat /tmp/hello.txt
ll /tmp/hello.txt

# delete "infrastructure"
terraform destroy


# Example 2 - Terraform GCP example

cd $WORKDIR/terraform/gcp

# initialize provider
cp components/provider.tf .
cat provider.tf
terraform init
terraform providers
ls -la
cat .terraform.lock.hcl

# build VPC network
cp components/vpc.tf .
cat vpc.tf
terraform plan
terraform apply

# see GCP Console > VPC network

# build GCE VMs
cp -r components/* .
cat resources.tf
cat gce_instance/variables.tf
cat gce_instance/main.tf
terraform init
terraform providers
terraform plan
terraform apply -auto-approve

# see GCP Console > Compute Engine

# list GCE VMs
gcloud compute instances list
gcloud compute instances describe my-oregon-vm --zone=us-west1-a

# check access
gcloud compute ssh my-columbus-vm --zone=us-east5-b
gcloud compute ssh my-oregon-vm --zone=us-west1-a
gcloud compute ssh my-belgium-vm --zone=europe-west1-b
    # try: 
    # ping <private ip of other hosts>
    # sudo apt install traceroute nmap
    # traceroute <private ip of other hosts>
    # nmap <private ip of other hosts>

# delete "infrastructure" and check terraform state
terraform destroy
cat terraform.tfstate
terraform show
gcloud compute instances list

# see GCP Console > Compute Engine

